{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/ErrorAlert.js","utils/useQuery.js","dashboard/ReservationDetail.js","dashboard/TableDetail.js","dashboard/Dashboard.js","layout/NotFound.js","reservations/ReservationForm.js","reservations/AddReservation.js","tables/TableForm.js","tables/AddTable.js","reservations/ReservationSeatForm.js","reservations/ReservationSeat.js","search/SearchForm.js","search/Search.js","reservations/EditReservation.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","previous","currentDate","split","year","month","day","setMonth","setDate","next","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","readReservation","reservation_id","createReservation","people","Number","method","body","JSON","stringify","createTable","table","listTables","updateSeat","table_id","finishTable","updateReservationStatus","searchByMobileNumber","mobile_number","updateReservation","updatedReservation","ErrorAlert","useQuery","URLSearchParams","useLocation","search","ReservationDetail","handleCancel","displayReservations","index","first_name","last_name","reservation_time","onClick","TableDetail","tables","handleFinish","displayTables","occupied","table_name","capacity","Dashboard","history","useHistory","useState","setReservations","reservationsError","setReservationsError","setTables","tablesError","setTablesError","cancelError","setCancelError","query","get","window","confirm","push","useEffect","abortController","AbortController","listReservations","catch","abort","NotFound","ReservationForm","formData","handleChange","handleSubmit","onSubmit","htmlFor","onChange","required","placeholder","pattern","AddReservation","setFormData","setError","event","preventDefault","slice","target","currentFormData","TableForm","handleNameChange","handleCapacityChange","min","goBack","AddTable","ReservationSeatForm","require","ReservationSeat","useParams","setReservation","reservationError","setReservationError","tableData","parse","SearchForm","Search","submitted","setSubmitted","reservationsFound","length","EditReservation","Routes","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3663237.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Defines the menu for this application.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\n\r\nfunction Menu() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\r\n      <div className=\"container-fluid d-flex flex-column p-0\">\r\n        <Link\r\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\r\n          to=\"/\"\r\n        >\r\n          <div className=\"sidebar-brand-text mx-3\">\r\n            <span>Periodic Tables</span>\r\n          </div>\r\n        </Link>\r\n        <hr className=\"sidebar-divider my-0\" />\r\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <span className=\"oi oi-dashboard\" />\r\n              &nbsp;Dashboard\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/search\">\r\n              <span className=\"oi oi-magnifying-glass\" />\r\n              &nbsp;Search\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/reservations/new\">\r\n              <span className=\"oi oi-plus\" />\r\n              &nbsp;New Reservation\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/tables/new\">\r\n              <span className=\"oi oi-layers\" />\r\n              &nbsp;New Table\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"text-center d-none d-md-inline\">\r\n          <button\r\n            className=\"btn rounded-circle border-0\"\r\n            id=\"sidebarToggle\"\r\n            type=\"button\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\r\nconst timeFormat = /\\d\\d:\\d\\d/;\r\n\r\n/**\r\n * Formats a Date object as YYYY-MM-DD.\r\n *\r\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\r\n * You may export this function if you need it.\r\n *\r\n * @param date\r\n *  an instance of a date object\r\n * @returns {string}\r\n *  the specified Date formatted as YYYY-MM-DD\r\n */\r\nfunction asDateString(date) {\r\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\r\n    .toString(10)\r\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\r\n}\r\n\r\n/**\r\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\r\n * @param dateString\r\n *  ISO-8601 date string\r\n * @returns {*}\r\n *  the specified date string formatted as YYYY-MM-DD\r\n */\r\nexport function formatAsDate(dateString) {\r\n  return dateString.match(dateFormat)[0];\r\n}\r\n\r\n/**\r\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\r\n * @param timeString\r\n *  HH:MM:SS time string\r\n * @returns {*}\r\n *  the specified time string formatted as YHH:MM.\r\n */\r\nexport function formatAsTime(timeString) {\r\n  return timeString.match(timeFormat)[0];\r\n}\r\n\r\n/**\r\n * Today's date as YYYY-MM-DD.\r\n * @returns {*}\r\n *  the today's date formatted as YYYY-MM-DD\r\n */\r\nexport function today() {\r\n  return asDateString(new Date());\r\n}\r\n\r\n/**\r\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\r\n * @param currentDate\r\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\r\n * @returns {*}\r\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\r\n */\r\nexport function previous(currentDate) {\r\n  let [ year, month, day ] = currentDate.split(\"-\");\r\n  month -= 1;\r\n  const date = new Date(year, month, day);\r\n  date.setMonth(date.getMonth());\r\n  date.setDate(date.getDate() - 1);\r\n  return asDateString(date);\r\n}\r\n\r\n/**\r\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\r\n * @param currentDate\r\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\r\n * @returns {*}\r\n *  the date one day after currentDate, formatted as YYYY-MM-DD\r\n */\r\nexport function next(currentDate) {\r\n  let [ year, month, day ] = currentDate.split(\"-\");\r\n  month -= 1;\r\n  const date = new Date(year, month, day);\r\n  date.setMonth(date.getMonth());\r\n  date.setDate(date.getDate() + 1);\r\n  return asDateString(date);\r\n}\r\n","import { formatAsDate } from \"./date-time\";\r\n\r\nfunction formatDate(reservation) {\r\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\r\n  return reservation;\r\n}\r\n\r\n/**\r\n * Formats the reservation_date property of a reservation.\r\n * @param reservations\r\n *  a single reservation, or an array of reservations.\r\n * @returns {[reservation]|reservation}\r\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\r\n */\r\nexport default function formatReservationDate(reservations) {\r\n  return Array.isArray(reservations)\r\n    ? reservations.map(formatDate)\r\n    : formatDate(reservations);\r\n}\r\n","/**\r\n * Defines the base URL for the API.\r\n * The default values is overridden by the `API_BASE_URL` environment variable.\r\n */\r\nimport formatReservationDate from \"./format-reservation-date\";\r\nimport formatReservationTime from \"./format-reservation-date\";\r\n\r\nconst API_BASE_URL =\r\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\r\n\r\n/**\r\n * Defines the default headers for these functions to work with `json-server`\r\n */\r\nconst headers = new Headers();\r\nheaders.append(\"Content-Type\", \"application/json\");\r\n\r\n/**\r\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\r\n *\r\n * This function is NOT exported because it is not needed outside of this file.\r\n *\r\n * @param url\r\n *  the url for the requst.\r\n * @param options\r\n *  any options for fetch\r\n * @param onCancel\r\n *  value to return if fetch call is aborted. Default value is undefined.\r\n * @returns {Promise<Error|any>}\r\n *  a promise that resolves to the `json` data or an error.\r\n *  If the response is not in the 200 - 399 range the promise is rejected.\r\n */\r\nasync function fetchJson(url, options, onCancel) {\r\n  try {\r\n    const response = await fetch(url, options);\r\n\r\n    if (response.status === 204) {\r\n      return null;\r\n    }\r\n\r\n    const payload = await response.json();\r\n\r\n    if (payload.error) {\r\n      return Promise.reject({ message: payload.error });\r\n    }\r\n    return payload.data;\r\n  } catch (error) {\r\n    if (error.name !== \"AbortError\") {\r\n      console.error(error.stack);\r\n      throw error;\r\n    }\r\n    return Promise.resolve(onCancel);\r\n  }\r\n}\r\n\r\n/**\r\n * Retrieves all existing reservation.\r\n * @returns {Promise<[reservation]>}\r\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\r\n */\r\n\r\nexport async function listReservations(params, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations`);\r\n  Object.entries(params).forEach(([key, value]) =>\r\n    url.searchParams.append(key, value.toString())\r\n  );\r\n  return await fetchJson(url, { headers, signal }, [])\r\n    .then(formatReservationDate)\r\n    .then(formatReservationTime);\r\n}\r\n\r\nexport async function readReservation(reservation_id, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\r\n  return await fetchJson(url, { headers, signal }, []);\r\n}\r\n\r\nexport async function createReservation(reservation, signal) {\r\n  const url = `${API_BASE_URL}/reservations`;\r\n  reservation.people = Number(reservation.people);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify({ data: reservation }),\r\n    signal,\r\n  };\r\n  let data = await fetchJson(url, options);\r\n  return data;\r\n}\r\n\r\nexport async function createTable(table, signal) {\r\n  const url = `${API_BASE_URL}/tables`;\r\n  const options = {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify({ data: table }),\r\n    signal,\r\n  };\r\n  let data = await fetchJson(url, options);\r\n  return data;\r\n}\r\n\r\nexport async function listTables(signal) {\r\n  const url = new URL(`${API_BASE_URL}/tables`);\r\n  return await fetchJson(url, { headers, signal }, []);\r\n}\r\n\r\nexport async function updateSeat(table_id, reservation_id, signal) {\r\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers,\r\n    body: JSON.stringify({ data: { reservation_id } }),\r\n    signal,\r\n  };\r\n  const data = await fetchJson(url, options);\r\n  return data;\r\n}\r\n\r\nexport async function finishTable(table_id, signal) {\r\n  const url = new URL(`${API_BASE_URL}/tables/${table_id}/seat`);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers,\r\n    body: JSON.stringify({ data: { table_id } }),\r\n    signal,\r\n  };\r\n  return await fetchJson(url, options);\r\n}\r\n\r\nexport async function updateReservationStatus(reservation_id, status, signal) {\r\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}/status`);\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers,\r\n    body: JSON.stringify({ data: { status } }),\r\n    signal,\r\n  };\r\n  return await fetchJson(url, options);\r\n}\r\n\r\nexport async function searchByMobileNumber(mobile_number, signal) {\r\n  const url = `${API_BASE_URL}/reservations/?mobile_number=${mobile_number}`;\r\n  return await fetchJson(url, { signal })\r\n    .then(formatReservationDate)\r\n    .then(formatReservationTime);\r\n}\r\n\r\nexport async function updateReservation(reservation_id, updatedReservation, signal) {\r\n  const url = `${API_BASE_URL}/reservations/${reservation_id}/edit`;\r\n  updatedReservation.people = Number(updatedReservation.people);\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers,\r\n    body: JSON.stringify({ data: updatedReservation }),\r\n    signal,\r\n  };\r\n  const data = await fetchJson(url, options);\r\n  return data;\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Defines the alert message to render if the specified error is truthy.\r\n * @param error\r\n *  an instance of an object with `.message` property as a string, typically an Error instance.\r\n * @returns {JSX.Element}\r\n *  a bootstrap danger alert that contains the message string.\r\n */\r\n\r\nfunction ErrorAlert({ error }) {\r\n  return (\r\n    error && (\r\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","/**\r\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\r\n *\r\n * @example\r\n *\r\n *     const query = useQuery();\r\n *     const date = query.get(\"date\")\r\n */\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default useQuery;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ReservationDetail({ reservations, date, handleCancel }) {\r\n  const displayReservations = reservations.map((reservation, index) => {\r\n    if (\r\n      reservation.status !== \"finished\" ||\r\n      reservation.status !== \"cancelled\"\r\n    ) {\r\n      return (\r\n        <tr key={index} className=\"res-text table-row\">\r\n          <td>{reservation.reservation_id}</td>\r\n          <td>{reservation.first_name}</td>\r\n          <td>{reservation.last_name}</td>\r\n          <td>{reservation.mobile_number}</td>\r\n          <td>{reservation.reservation_date}</td>\r\n          <td>{reservation.reservation_time}</td>\r\n          <td>{reservation.people}</td>\r\n          <td>\r\n            <p data-reservation-id-status={reservation.reservation_id}>\r\n              {reservation.status}\r\n            </p>\r\n          </td>\r\n          <td>\r\n            {reservation.status !== \"booked\" ? null : (\r\n              <>\r\n                <Link\r\n                  to={`/reservations/${reservation.reservation_id}/seat`}\r\n                  className=\"btn btn-primary mx-1\"\r\n                >\r\n                  Seat\r\n                </Link>\r\n\r\n                <Link\r\n                  to={`/reservations/${reservation.reservation_id}/edit`}\r\n                  className=\"btn btn-primary mx-1\"\r\n                >\r\n                  Edit\r\n                </Link>\r\n\r\n                <button\r\n                  data-reservation-id-cancel={reservation.reservation_id}\r\n                  className=\"btn btn-danger\"\r\n                  type=\"button\"\r\n                  onClick={() => handleCancel(reservation)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n            <table className=\"table table-striped\">\r\n                <thead className=\"thread-dark\">\r\n                    <tr>\r\n                        <th>Reservation ID</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Mobile Number</th>\r\n                        <th>Reservation Date</th>\r\n                        <th>Reservation Time</th>\r\n                        <th>People</th>\r\n                        <th>Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{displayReservations}</tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReservationDetail;\r\n","function TableDetail({ tables, handleFinish }) {\r\n  const displayTables = tables.map((table, index) => {\r\n    if (table.occupied || table.reservation_id) {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{table.table_id}</td>\r\n          <td>{table.table_name}</td>\r\n          <td>{table.capacity}</td>\r\n          <td>{table.reservation_id}</td>\r\n          <td>\r\n            <p data-table-id-status={table.table_id}>Occupied</p>\r\n          </td>\r\n          <td>\r\n            <button\r\n              data-table-id-finish={table.table_id}\r\n              className=\"btn btn-primary\"\r\n              type=\"\"\r\n              onClick={() => handleFinish(table)}\r\n            >\r\n              Finish\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{table.table_id}</td>\r\n          <td>{table.table_name}</td>\r\n          <td>{table.capacity}</td>\r\n          <td>{table.reservation_id}</td>\r\n          <td>\r\n            <p className=\"col\" data-table-id-status={table.table_id}>\r\n              Free\r\n            </p>\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"thread-dark\">\r\n            <tr>\r\n              <th>Table ID</th>\r\n              <th>Table Name</th>\r\n              <th>Capacity</th>\r\n              <th>Reservation ID</th>\r\n              <th>Occupied</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{displayTables}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableDetail;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  listReservations,\r\n  listTables,\r\n  finishTable,\r\n  updateReservationStatus,\r\n} from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport useQuery from \"../utils/useQuery\";\r\nimport { today } from \"../utils/date-time\";\r\nimport { previous, next } from \"../utils/date-time\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ReservationDetail from \"./ReservationDetail\";\r\nimport TableDetail from \"./TableDetail\";\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState([]);\r\n  const [cancelError, setCancelError] = useState(null);\r\n\r\n  let date = today();\r\n  const query = useQuery().get(\"date\");\r\n\r\n  if (query) {\r\n    date = query;\r\n  }\r\n\r\n  // Load Reservations and Tables\r\n\r\n  useEffect(loadDashBoard, [date]);\r\n\r\n  function loadDashBoard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    setTablesError(null);\r\n    listReservations({ date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  // Handlers\r\n\r\n  async function handleFinish({ table_id, reservation_id }) {\r\n    const confirmationWindow = window.confirm(\r\n      \"Is this table ready to seat new guests? This cannot be undone.\"\r\n    );\r\n\r\n    if (confirmationWindow) {\r\n      try {\r\n        await finishTable(table_id);\r\n        await updateReservationStatus(reservation_id, \"finished\");\r\n      } catch (error) {\r\n        setTablesError([error]);\r\n      }\r\n\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  async function handleCancel({ reservation_id }) {\r\n    const confirmationWindow = window.confirm(\r\n      \"Do you want to cancel this reservation? This cannot be undone.\"\r\n    );\r\n\r\n    if (confirmationWindow) {\r\n      try {\r\n        await updateReservationStatus(reservation_id, \"cancelled\");\r\n      } catch (error) {\r\n        setCancelError([error]);\r\n      }\r\n\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>Dashboard</h1>\r\n      <div className=\"d-md-flex mb-3\">\r\n        <h4 className=\"mb-0\">Reservation for date: {date}</h4>\r\n      </div>\r\n      <div className=\"contrainer\">\r\n        <Link\r\n          to={`/dashboard/?date=${previous(date)}`}\r\n          className=\"btn btn-dark\"\r\n        >\r\n          Previous\r\n        </Link>\r\n\r\n        <Link to={`/dashboard`} className=\"btn btn-dark\">\r\n          Today\r\n        </Link>\r\n\r\n        <Link to={`/dashboard/?date=${next(date)}`} className=\"btn btn-dark\">\r\n          Next\r\n        </Link>\r\n      </div>\r\n      <br />\r\n      <ErrorAlert error={reservationsError} />\r\n      <ErrorAlert error={tablesError} />\r\n      <ErrorAlert error={cancelError} />\r\n\r\n      <ReservationDetail\r\n        reservations={reservations}\r\n        date={date}\r\n        handleCancel={handleCancel}\r\n      />\r\n      <br />\r\n      <TableDetail tables={tables} handleFinish={handleFinish} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\r\n *\r\n * You will not need to make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h1>Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ReservationForm({ formData, handleChange, handleSubmit }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-2\" htmlFor=\"first_name\">\r\n            First Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"first_name\"\r\n            className=\"form-control\"\r\n            name=\"first_name\"\r\n            onChange={handleChange}\r\n            value={formData.first_name}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-2\" htmlFor=\"last_name\">\r\n            Last Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"last_name\"\r\n            className=\"form-control\"\r\n            name=\"last_name\"\r\n            onChange={handleChange}\r\n            value={formData.last_name}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-2\" htmlFor=\"mobile_number\">\r\n            Mobile Number:\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"mobile_number\"\r\n            className=\"form-control\"\r\n            name=\"mobile_number\"\r\n            onChange={handleChange}\r\n            value={formData.mobile_number}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-2\" htmlFor=\"reservation_date\">\r\n            Date of Reservation (Closed on Tuesdays):\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"YYYY-MM-DD\"\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n            id=\"reservation_date\"\r\n            className=\"form-control\"\r\n            name=\"reservation_date\"\r\n            onChange={handleChange}\r\n            value={formData.reservation_date}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-2\" htmlFor=\"reservation_time\">\r\n            Time of Reservation:\r\n          </label>\r\n          <input\r\n            type=\"time\"\r\n            placeholder=\"HH:MM\"\r\n            pattern=\"[0-9]{2}:[0-9]{2}\"\r\n            id=\"reservation_time\"\r\n            className=\"form-control\"\r\n            name=\"reservation_time\"\r\n            onChange={handleChange}\r\n            value={formData.reservation_time}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"mr-2\" htmlFor=\"people\">\r\n            Number of People:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"people\"\r\n            className=\"form-control\"\r\n            name=\"people\"\r\n            onChange={handleChange}\r\n            value={formData.people}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary mr-1 mb-3\"\r\n        >\r\n          Submit\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-secondary mr-1 mb-3\"\r\n          onClick={() => history.push(\"/\")}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReservationForm;\r\n","import React, { useState } from \"react\";\r\nimport ReservationForm from \"./ReservationForm\";\r\nimport { createReservation } from \"../utils/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\nfunction AddReservation() {\r\n  const history = useHistory();\r\n\r\n  const initialFormState = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    mobile_number: \"\",\r\n    reservation_date: \"\",\r\n    reservation_time: \"\",\r\n    people: \"1\",\r\n    status: \"booked\",\r\n  }\r\n\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n  const [error, setError] = useState(false);\r\n\r\n  // Handlers \r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData((currentFormData) => ({\r\n      ...currentFormData,\r\n      [target.name]: target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    try {\r\n      const response = await createReservation(\r\n        formData,\r\n        abortController.signal\r\n      );\r\n      history.push(\r\n        `/dashboard/?date=${response.reservation_date.slice(0, 10)}`\r\n      );\r\n    } catch(error) {\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Create a New Reservation</h1>\r\n      </div>\r\n      <div>\r\n        <ErrorAlert error={error} />\r\n        <ReservationForm\r\n          formData={formData}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddReservation;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TableForm({\r\n  formData,\r\n  handleNameChange,\r\n  handleCapacityChange,\r\n  handleSubmit,\r\n}) {\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label mr-2\" htmlFor=\"table_name\">\r\n              Table Name:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"table_name\"\r\n              className=\"form-control\"\r\n              name=\"table_name\"\r\n              onChange={handleNameChange}\r\n              value={formData.table_name}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label mr-2\" htmlFor=\"capacity\">\r\n              Table Capacity:\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"capacity\"\r\n              className=\"form-control\"\r\n              name=\"capacity\"\r\n              min=\"1\"\r\n              onChange={handleCapacityChange}\r\n              value={formData.capacity}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-primary mr-1 mb-3\"\r\n          >\r\n            Submit\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => history.goBack()}\r\n            className=\"btn btn-secondary mr-1 mb-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TableForm;\r\n","import React, { useState } from \"react\";\r\nimport TableForm from \"./TableForm\";\r\nimport { createTable } from \"../utils/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\nfunction AddTable() {\r\n  \r\n  const history = useHistory();\r\n\r\n  const initialFormState = {\r\n    table_name: \"\",\r\n    capacity: \"1\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n  const [error, setError] = useState(false);\r\n\r\n  // Handlers\r\n\r\n  const handleNameChange = ({ target }) => {\r\n    setFormData((currentFormData) => ({\r\n      ...currentFormData,\r\n      [target.name]: target.value,\r\n    }));\r\n  };\r\n\r\n  const handleCapacityChange = ({ target }) => {\r\n    setFormData((currentFormData) => ({\r\n      ...currentFormData,\r\n      [target.name]: Number(target.value),\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n\r\n    try {\r\n      await createTable(formData, abortController.signal);\r\n      history.push(`/dashboard`);\r\n    } catch(error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Create a Table</h1>\r\n      </div>\r\n      \r\n      <div>\r\n        <ErrorAlert error={error} />\r\n        <TableForm\r\n          formData={formData}\r\n          handleNameChange={handleNameChange}\r\n          handleCapacityChange={handleCapacityChange}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTable;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ReservationSeatForm({ tables, handleSubmit, handleChange }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Select Table:</label>\r\n          <select name=\"table_id\" onChange={handleChange}>\r\n            <option value=\"\">Table Name - Capacity</option>\r\n            {tables.map((table) => (\r\n              <option\r\n                key={table.table_id}\r\n                value={JSON.stringify(table)}\r\n                require={true}\r\n              >\r\n                {table.table_name} - {table.capacity}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <button className=\"btn btn-primary mr-1 mb-3\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-secondary mr-1 mb-3\"\r\n            type=\"button\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReservationSeatForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { \r\n  listTables, \r\n  readReservation,\r\n  updateSeat,\r\n  updateReservationStatus, \r\n} from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport ReservationSeatForm from \"./ReservationSeatForm\";\r\n\r\n\r\nfunction ReservationSeat() {\r\n  const params = useParams();\r\n  const reservation_id = params.reservation_id;\r\n  const history = useHistory();\r\n\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n  const [reservation, setReservation] = useState({});\r\n  const [reservationError, setReservationError] = useState([]);\r\n\r\n  // Handlers\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData(target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const tableData = JSON.parse(formData);\r\n      const response = await updateSeat(\r\n        tableData.table_id,\r\n        reservation_id,\r\n      );\r\n      response.status = \"Occupied\";\r\n      await updateReservationStatus(reservation_id, \"seated\");\r\n      history.push(\"/dashboard\");\r\n    } catch(error) {\r\n      setTablesError(error);\r\n    }\r\n  };\r\n\r\n  // Load Tables\r\n\r\n  useEffect(loadTables, []);\r\n\r\n  function loadTables() {\r\n    const abortController = new AbortController();\r\n    setTablesError(null);\r\n    listTables(abortController.signal)\r\n      .then(setTables)\r\n      .catch(setTablesError);\r\n    \r\n    return () => abortController.abort();\r\n  }\r\n\r\n  useEffect(loadReservation, [reservation_id]);\r\n\r\n  function loadReservation() {\r\n    const abortController = new AbortController();\r\n    setReservationError(null);\r\n    readReservation(reservation_id, abortController.signal)\r\n      .then(setReservation)\r\n      .catch(setReservationError);\r\n    \r\n    return () => abortController.abort();\r\n  }\r\n\r\n  if (tables) {\r\n    return (\r\n      <main>\r\n        <h1>Seat Reservation</h1>\r\n        <h3>\r\n          Reservation ID: {reservation_id} Party Size: {reservation.people}\r\n        </h3>\r\n        <div>\r\n          <ErrorAlert error={tablesError} />\r\n          <ErrorAlert error={reservationError} />\r\n          <ReservationSeatForm\r\n            tables={tables}\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n          />\r\n        </div>\r\n      </main>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3>There are no tables currently available.</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservationSeat;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchForm({ formData, handleChange, handleSubmit }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number:</label>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"mobile_number\"\r\n              className=\"form-control\"\r\n              name=\"mobile_number\"\r\n              onChange={handleChange}\r\n              value={formData.mobile_number}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              className=\"btn btn-primary mr-1 mb-3\"\r\n              type=\"submit\"\r\n              onClick={(event) => handleSubmit(event)}\r\n            >\r\n              Find\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-secondary mr-1 mb-3\"\r\n              type=\"button\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React, { useState } from \"react\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { searchByMobileNumber } from \"../utils/api\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ReservationDetail from \"../dashboard/ReservationDetail\";\r\n\r\nfunction Search() {\r\n  const initialFormState = {\r\n    mobile_number: \" \",\r\n  };\r\n\r\n  const [reservations, setReservations] = useState([]);\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n  const [error, setError] = useState([]);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Handlers\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData((currentFormData) => ({\r\n      ...currentFormData,\r\n      [target.name]: target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mobile_number = formData.mobile_number;\r\n      const reservationsFound = await searchByMobileNumber(mobile_number);\r\n      setReservations(reservationsFound);\r\n      setSubmitted(true);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div>\r\n        <h1>Search by Mobile Number</h1>\r\n      </div>\r\n\r\n      <div>\r\n        <SearchForm\r\n          formData={formData}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n\r\n        {error.length > 0 && <ErrorAlert error={error} />}\r\n\r\n        {reservations.length > 0 && (\r\n          <ReservationDetail reservations={reservations} />\r\n        )}\r\n\r\n        {submitted &&\r\n          reservations.length <= 0 &&\r\n          `No reservations found for mobile number: ${formData.mobile_number}`}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { readReservation, updateReservation } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport ReservationForm from \"./ReservationForm\";\r\n\r\nfunction EditReservation() {\r\n    const initialFormState = {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        mobile_number: \"\",\r\n        reservation_date: \"\",\r\n        reservation_time: \"\",\r\n        people: \"\",\r\n        status: \"\",\r\n    };\r\n\r\n    const params = useParams();\r\n    const reservation_id = params.reservation_id;\r\n    const history = useHistory();\r\n\r\n    const [reservationError, setReservationError] = useState(null);\r\n    const [formData, setFormData] = useState({ ...initialFormState });\r\n    const [error, setError] = useState(null);\r\n\r\n    // Load Reservation\r\n    \r\n    useEffect(loadReservation, [reservation_id]);\r\n\r\n    function loadReservation() {\r\n        const abortController = new AbortController();\r\n        setReservationError(null);\r\n        readReservation(reservation_id, abortController.signal)\r\n            .then((data) => \r\n                setFormData({\r\n                    first_name: data.first_name,\r\n                    last_name: data.last_name,\r\n                    mobile_number: data.mobile_number,\r\n                    reservation_date: data.reservation_date.slice(0, 10),\r\n                    reservation_time: data.reservation_time.slice(0, 5),\r\n                    people: data.people,\r\n                    status: data.status,\r\n                })\r\n            )\r\n            .catch(setReservationError);\r\n        return () => abortController.abort();\r\n    }\r\n\r\n    // Handlers\r\n\r\n    const handleChange = ({ target }) => {\r\n        setFormData((currentFormData) => ({\r\n            ...currentFormData,\r\n            [target.name]: target.value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setError(null);\r\n        const abortController = new AbortController();\r\n        try {\r\n            const response = await updateReservation(\r\n                reservation_id,\r\n                formData,\r\n                abortController.signal\r\n            );\r\n\r\n            history.push(\r\n                `/dashboard/?date=${response.reservation_date.slice(0, 10)}`\r\n            );\r\n        } catch(error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <div>\r\n                <h1>Edit Reservation</h1>\r\n            </div>\r\n\r\n            <div>\r\n                <ErrorAlert error={error} />\r\n                <ErrorAlert error={reservationError} />\r\n            </div>\r\n\r\n            <div>\r\n                <ReservationForm\r\n                    formData={formData}\r\n                    handleChange={handleChange}\r\n                    handleSubmit={handleSubmit}\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default EditReservation;","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport NotFound from \"./NotFound\";\r\nimport { today } from \"../utils/date-time\";\r\nimport AddReservation from \"../reservations/AddReservation\";\r\nimport AddTable from \"../tables/AddTable\";\r\nimport ReservationSeat from \"../reservations/ReservationSeat\";\r\nimport Search from \"../search/Search\";\r\nimport EditReservation from \"../reservations/EditReservation\";\r\n\r\n/**\r\n * Defines all the routes for the application.\r\n *\r\n * You will need to make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact={true} path=\"/\">\r\n        <Redirect to={\"/dashboard\"} />\r\n      </Route>\r\n      <Route exact path=\"/reservations/new\">\r\n        <AddReservation />\r\n      </Route>\r\n      <Route exact path=\"/reservations\">\r\n        <Redirect to={\"/dashboard\"} />\r\n      </Route>\r\n      <Route exact path=\"/reservations/:reservation_id/seat\">\r\n        <ReservationSeat />\r\n      </Route>\r\n      <Route exact path=\"/reservations/:reservation_id/edit\">\r\n        <EditReservation />\r\n      </Route>\r\n      <Route path=\"/dashboard\">\r\n        <Dashboard date={today()} />\r\n      </Route>\r\n      <Route exact path=\"/tables/new\">\r\n        <AddTable />\r\n      </Route>\r\n      <Route exact path=\"/search\">\r\n        <Search />\r\n      </Route>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport Routes from \"./Routes\";\r\n\r\nimport \"./Layout.css\";\r\n\r\n/**\r\n * Defines the main layout of the application.\r\n *\r\n * You will not need to make changes to this file.\r\n *\r\n * @returns {JSX.Element}\r\n */\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row h-100\">\r\n        <div className=\"col-md-2 side-bar\">\r\n          <Menu />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./layout/Layout\";\r\n\r\n/**\r\n * Defines the root application component.\r\n * @returns {JSX.Element}\r\n */\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <Layout />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}